server:
  port: 8080
spring:
  application:
    name: accounts
  profiles:
    active: "qa"
  datasource:
    url: jdbc:mysql://localhost:3309/accountsdb
    username: root
    password: root
  sql:
    init:
      mode: always
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

  jpa:
    show-sql: true
  config:
    import: "optional:configserver:http://localhost:8071/"
  rabbitmq:
    host: "localhost"
    port: 5672
    username: guest
    password: guest

management:
  endpoints:
    web:
      exposure:
        include: "*"
    health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

    shutdown:
      enabled: true
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

info:
  app:
    name: "accounts"
    description: "Eazy Bank Accounts Application"
    version: "1.0.0"

logging:
  level:
    com:
      bankIndia:
        account: debug
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 100ms
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retry-exceptions:
        - org.springframework.web.client.ResourceAccessException
        - java.net.SocketTimeoutException
        - java.net.ConnectException
# resilience4j:
#   ratelimiter:
#     configs:
#       default:
#         timeout-duration: 1000
#         limit-refresh-period: 5000
#         limit-for-period: 1

